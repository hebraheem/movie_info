[{"/Users/aple/Desktop/project/accordion/src/index.js":"1","/Users/aple/Desktop/project/accordion/src/App.js":"2","/Users/aple/Desktop/project/accordion/src/components/Drawer.jsx":"3","/Users/aple/Desktop/project/accordion/src/components/Navbar.jsx":"4","/Users/aple/Desktop/project/accordion/src/components/Home.js":"5","/Users/aple/Desktop/project/accordion/src/components/SignUp.jsx":"6","/Users/aple/Desktop/project/accordion/src/components/LogIn.jsx":"7","/Users/aple/Desktop/project/accordion/src/context.js":"8","/Users/aple/Desktop/project/accordion/src/firebase.js":"9","/Users/aple/Desktop/project/accordion/src/components/Movies.jsx":"10","/Users/aple/Desktop/project/accordion/src/components/Loading.jsx":"11","/Users/aple/Desktop/project/accordion/src/components/MovieInfo.jsx":"12","/Users/aple/Desktop/project/accordion/src/components/PrivateRoute.jsx":"13","/Users/aple/Desktop/project/accordion/src/components/Snack.jsx":"14","/Users/aple/Desktop/project/accordion/src/components/ResetPass.jsx":"15"},{"size":398,"mtime":1611078134000,"results":"16","hashOfConfig":"17"},{"size":1279,"mtime":1611237094000,"results":"18","hashOfConfig":"17"},{"size":1003,"mtime":1611149641000,"results":"19","hashOfConfig":"17"},{"size":1528,"mtime":1611185359000,"results":"20","hashOfConfig":"17"},{"size":1227,"mtime":1611149261000,"results":"21","hashOfConfig":"17"},{"size":4619,"mtime":1611238269000,"results":"22","hashOfConfig":"17"},{"size":3371,"mtime":1611240981000,"results":"23","hashOfConfig":"17"},{"size":2502,"mtime":1611230588000,"results":"24","hashOfConfig":"17"},{"size":565,"mtime":1611230494000,"results":"25","hashOfConfig":"17"},{"size":2696,"mtime":1611181972000,"results":"26","hashOfConfig":"17"},{"size":367,"mtime":1611146366000,"results":"27","hashOfConfig":"17"},{"size":3164,"mtime":1611182433000,"results":"28","hashOfConfig":"17"},{"size":434,"mtime":1611190077000,"results":"29","hashOfConfig":"17"},{"size":680,"mtime":1611234644000,"results":"30","hashOfConfig":"17"},{"size":1993,"mtime":1611240657000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ipg15m",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aple/Desktop/project/accordion/src/index.js",[],["68","69"],"/Users/aple/Desktop/project/accordion/src/App.js",[],"/Users/aple/Desktop/project/accordion/src/components/Drawer.jsx",["70","71"],"import React from 'react'\nimport {\n  Drawer as MuiDrawer,\n  Divider,\n  List,\n  ListItemText,\n  ListItem,\n  ListItemIcon,\n  makeStyles,\n} from \"@material-ui/core\";\nimport {HighQuality, MovieFilter } from \"@material-ui/icons\"\nimport {NavLink} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  list: {\n    paddingTop: \"30vh\",\n  },\n}));\n\nconst menu = [\n  {menu: \"\", link: \"\"},\n\n]\n\nconst Drawer = () => {\n    const classes = useStyles();\n    return (\n      <MuiDrawer variant=\"permanent\" anchor=\"left\" className={classes.drawer}>\n        <div />\n        <Divider />\n        <List className= {classes.list}>\n          {[\"Movies\", \"Movies by Date\"].map((text, index) => (\n            <ListItem button key= {text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <HighQuality /> : <MovieFilter />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </MuiDrawer>\n    );\n}\n\nexport default Drawer\n",["72","73"],"/Users/aple/Desktop/project/accordion/src/components/Navbar.jsx",[],"/Users/aple/Desktop/project/accordion/src/components/Home.js",[],"/Users/aple/Desktop/project/accordion/src/components/SignUp.jsx",[],"/Users/aple/Desktop/project/accordion/src/components/LogIn.jsx",[],"/Users/aple/Desktop/project/accordion/src/context.js",["74"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"./firebase\";\nimport axios from \"axios\"\n\nconst movieContext = React.createContext();\nconst moviesUrl = \"http://api.tvmaze.com/shows\";\nconst movies_infoUrl = \"http://api.tvmaze.com/shows/20\";\n//const movie_date = \"http://api.tvmaze.com/schedule?country=US&date=2020-12-24\";\n\nexport const MovieProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const [movie, setMovie] = useState([]);\n\n  /// firebase authentication starts here ///////////\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n    // useEffect(() => {\n    //   const unsuscirbe = auth.onAuthStateChanged((user) => {\n    //     setCurrentUser(user);\n    //   });\n    //   return unsuscirbe;\n    // }, []);\n  //////// firebase authentication ends here ///////////////\n\n  useEffect(() => {\n    axios.get(moviesUrl).then((res) => {\n     const movies = res.data;\n      setMovies(movies);\n      setLoading(false)\n    });\n  }, []);\n\n    useEffect(() => {\n      axios.get(movies_infoUrl).then((res) => {\n        const movie = res.data;\n        setMovie([movie]);\n        setLoading(false);\n      });\n    }, []);\n\n    function getMovie(id){\n     const singeleMovie = movies.find(movie =>movie.id === id) \n     return singeleMovie\n     \n    }\n\n    function detailMovie(id){\n      const detailM = getMovie(id)\n      setMovie([detailM]);\n    }\n\n  \n  return (\n    <movieContext.Provider\n      value={{\n        currentUser,\n        login,\n        signup,\n        logout,\n        resetPassword,\n        updatePassword,\n        updateEmail,\n        movies,\n        setMovies,\n        loading,\n        search,\n        setSearch,\n        movie,\n        setMovie,\n        detailMovie,\n      }}\n    >\n      {children}\n    </movieContext.Provider>\n  );\n};\n\nexport const useMovieConsumer = () => {\n  return useContext(movieContext);\n};\n","/Users/aple/Desktop/project/accordion/src/firebase.js",[],"/Users/aple/Desktop/project/accordion/src/components/Movies.jsx",["75"],"import {\n  Grid,\n  Card,\n  CardHeader,\n  CardMedia,\n  makeStyles,\n  CardContent,\n  Typography,\n  TextField,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useMovieConsumer } from \"../context\";\nimport { Star, Search } from \"@material-ui/icons\";\nimport Loading from \"./Loading\";\nimport {Link} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  media: {\n    width: \"320px\",\n    height: \"250px\",\n  },\n  card: {\n    width: \"320px\",\n    margin: \"20px auto\",\n    transitionProperty: \"transform\",\n    transitionDuration: \"1s\",\n    \"&:hover\": {\n      transform: \"scale(1.05)\",\n      cursor: \"pointer\",\n      transition: \"1s\",\n    },\n  },\n  search: {\n    margin: \"20px 0 20px 50px\",\n    width: \"300px\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nexport default function Movies() {\n  const {\n    movies,\n    loading,\n    search,\n    setSearch,\n    detailMovie,\n  } = useMovieConsumer();\n  const classes = useStyles();\n\n  return (\n    <>\n      {!loading && (\n        <>\n        <TextField\n          label=\"Search\"\n          variant=\"standard\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          className={classes.search}\n        />\n        </>\n      )}\n\n      <Grid container>\n        {loading && <Loading />}\n        {movies.map((movie) => {\n          let searchfilter = movie.name.includes(search.charAt(0).toUpperCase());\n          const checkCountry = movie.network\n            ? movie.network.country.name\n            : \"Not availabe\";\n          return (\n            searchfilter && (\n              <Grid item sm={12} md={6} lg={4} key={movie.id}>\n                <Link className={classes.link} to=\"/movie_info\">\n                  <Card className={classes.card}>\n                    <CardHeader title={`Name: ${movie.name}`} />\n                    <CardMedia\n                      image={movie.image.medium}\n                      title={movie.name}\n                      className={classes.media}\n                      onClick={() => detailMovie(movie.id)}\n                    />\n                    <CardContent>\n                      <Typography variant=\"h6\">\n                        Rating: {movie.rating.average} {<Star />}\n                      </Typography>\n                      <Typography variant=\"h6\">\n                        Status: {movie.status}\n                      </Typography>\n                      <Typography variant=\"h6\">\n                        Country: {checkCountry}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Link>\n              </Grid>\n            )\n          );\n        })}\n      </Grid>\n    </>\n  );\n}\n","/Users/aple/Desktop/project/accordion/src/components/Loading.jsx",[],["76","77"],"/Users/aple/Desktop/project/accordion/src/components/MovieInfo.jsx",[],"/Users/aple/Desktop/project/accordion/src/components/PrivateRoute.jsx",[],"/Users/aple/Desktop/project/accordion/src/components/Snack.jsx",[],"/Users/aple/Desktop/project/accordion/src/components/ResetPass.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":12,"column":9,"nodeType":"84","messageId":"85","endLine":12,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":20,"column":7,"nodeType":"84","messageId":"85","endLine":20,"endColumn":11},{"ruleId":"78","replacedBy":"87"},{"ruleId":"80","replacedBy":"88"},{"ruleId":"82","severity":1,"message":"89","line":11,"column":23,"nodeType":"84","messageId":"85","endLine":11,"endColumn":37},{"ruleId":"82","severity":1,"message":"90","line":13,"column":16,"nodeType":"84","messageId":"85","endLine":13,"endColumn":22},{"ruleId":"78","replacedBy":"91"},{"ruleId":"80","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'menu' is assigned a value but never used.",["93"],["94"],"'setCurrentUser' is assigned a value but never used.","'Search' is defined but never used.",["93"],["94"],"no-global-assign","no-unsafe-negation"]